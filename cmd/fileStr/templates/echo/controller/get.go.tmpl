package controller

import (
	"context"
	"net/http"
	"{{ .Name }}/config"
	"{{ .Name }}/utils"

	"github.com/labstack/echo/v4"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

func Get(c echo.Context) error {
	id := c.Param("id")

	objID, err := primitive.ObjectIDFromHex(id)
	utils.CheckErr(err)

	filter := bson.M{"_id": objID}
	var user bson.M

	cur, err := config.Col.Find(context.Background(), filter)
	utils.CheckErr(err)

	if cur.Next(context.Background()) {
		err := cur.Decode(&user)
		utils.CheckErr(err)
	}else{
		return c.JSON(http.StatusNotFound, map[string]string{
			"error": "user not found",
		})
	}
		
	defer cur.Close(context.Background())
	return c.JSON(http.StatusOK, user)
}

func GetAll(c echo.Context) error {
	cur, err := config.Col.Find(context.Background(), bson.D{{`{{`}}{{`}}`}})
	utils.CheckErr(err)

	var users []primitive.M
	for cur.Next(context.Background()) {
		var user bson.M
		err := cur.Decode(&user)
		utils.CheckErr(err)
		users = append(users, user)
	}
	defer cur.Close(context.Background())

	return c.JSON(http.StatusOK, users)
}
